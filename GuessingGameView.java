/*
 * GamesView.java
 */

package guessinggame;

import business.*;
import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;

/**
 * The application's main frame.
 */
public class GuessingGameView extends FrameView {
    Game g;
    
    public GuessingGameView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();
        int messageTimeout = resourceMap.getInteger("StatusBar.messageTimeout");
        messageTimer = new Timer(messageTimeout, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                statusMessageLabel.setText("");
            }
        });
        messageTimer.setRepeats(false);
        int busyAnimationRate = resourceMap.getInteger("StatusBar.busyAnimationRate");
        for (int i = 0; i < busyIcons.length; i++) {
            busyIcons[i] = resourceMap.getIcon("StatusBar.busyIcons[" + i + "]");
        }
        busyIconTimer = new Timer(busyAnimationRate, new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                busyIconIndex = (busyIconIndex + 1) % busyIcons.length;
                statusAnimationLabel.setIcon(busyIcons[busyIconIndex]);
            }
        });
        idleIcon = resourceMap.getIcon("StatusBar.idleIcon");
        statusAnimationLabel.setIcon(idleIcon);
        progressBar.setVisible(false);

        // connecting action tasks to status bar via TaskMonitor
        TaskMonitor taskMonitor = new TaskMonitor(getApplication().getContext());
        taskMonitor.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                String propertyName = evt.getPropertyName();
                if ("started".equals(propertyName)) {
                    if (!busyIconTimer.isRunning()) {
                        statusAnimationLabel.setIcon(busyIcons[0]);
                        busyIconIndex = 0;
                        busyIconTimer.start();
                    }
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(true);
                } else if ("done".equals(propertyName)) {
                    busyIconTimer.stop();
                    statusAnimationLabel.setIcon(idleIcon);
                    progressBar.setVisible(false);
                    progressBar.setValue(0);
                } else if ("message".equals(propertyName)) {
                    String text = (String)(evt.getNewValue());
                    statusMessageLabel.setText((text == null) ? "" : text);
                    messageTimer.restart();
                } else if ("progress".equals(propertyName)) {
                    int value = (Integer)(evt.getNewValue());
                    progressBar.setVisible(true);
                    progressBar.setIndeterminate(false);
                    progressBar.setValue(value);
                }
            }
        });
    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = GuessingGameApp.getApplication().getMainFrame();
            aboutBox = new GuessingGameAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        GuessingGameApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtxtGameName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtxtInstructions = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jtxtGuess = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtxtGuessHistory = new javax.swing.JTextArea();
        jbtnClear = new javax.swing.JButton();
        jbtnSubmitGuess = new javax.swing.JButton();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        jmnuGuessing = new javax.swing.JMenu();
        jmnuHiLo = new javax.swing.JMenuItem();
        jmnuHotCold = new javax.swing.JMenuItem();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        statusPanel = new javax.swing.JPanel();
        javax.swing.JSeparator statusPanelSeparator = new javax.swing.JSeparator();
        statusMessageLabel = new javax.swing.JLabel();
        statusAnimationLabel = new javax.swing.JLabel();
        progressBar = new javax.swing.JProgressBar();

        mainPanel.setName("mainPanel"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(guessinggame.GuessingGameApp.class).getContext().getResourceMap(GuessingGameView.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jtxtGameName.setFont(resourceMap.getFont("jtxtGameName.font")); // NOI18N
        jtxtGameName.setEnabled(false);
        jtxtGameName.setName("jtxtGameName"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jtxtInstructions.setEditable(false);
        jtxtInstructions.setBackground(resourceMap.getColor("jtxtInstructions.background")); // NOI18N
        jtxtInstructions.setColumns(20);
        jtxtInstructions.setLineWrap(true);
        jtxtInstructions.setRows(5);
        jtxtInstructions.setWrapStyleWord(true);
        jtxtInstructions.setName("jtxtInstructions"); // NOI18N
        jScrollPane2.setViewportView(jtxtInstructions);

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jtxtGuess.setFont(resourceMap.getFont("jtxtGuess.font")); // NOI18N
        jtxtGuess.setEnabled(false);
        jtxtGuess.setName("jtxtGuess"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jtxtGuessHistory.setEditable(false);
        jtxtGuessHistory.setBackground(resourceMap.getColor("jtxtGuessHistory.background")); // NOI18N
        jtxtGuessHistory.setColumns(20);
        jtxtGuessHistory.setLineWrap(true);
        jtxtGuessHistory.setRows(5);
        jtxtGuessHistory.setWrapStyleWord(true);
        jtxtGuessHistory.setName("jtxtGuessHistory"); // NOI18N
        jScrollPane1.setViewportView(jtxtGuessHistory);

        jbtnClear.setFont(resourceMap.getFont("jbtnClear.font")); // NOI18N
        jbtnClear.setText(resourceMap.getString("jbtnClear.text")); // NOI18N
        jbtnClear.setName("jbtnClear"); // NOI18N
        jbtnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnClearActionPerformed(evt);
            }
        });

        jbtnSubmitGuess.setText(resourceMap.getString("jbtnSubmitGuess.text")); // NOI18N
        jbtnSubmitGuess.setName("jbtnSubmitGuess"); // NOI18N
        jbtnSubmitGuess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSubmitGuessActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainPanelLayout.createSequentialGroup()
                .addContainerGap(201, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxtGameName, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtxtGuess, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(jbtnSubmitGuess)))
                .addGap(191, 191, 191))
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(mainPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 575, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, mainPanelLayout.createSequentialGroup()
                            .addGap(33, 33, 33)
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addComponent(jbtnClear)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mainPanelLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtxtGameName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtxtGuess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnSubmitGuess))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jbtnClear)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap())
        );

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        jmnuGuessing.setText(resourceMap.getString("jmnuGuessing.text")); // NOI18N
        jmnuGuessing.setName("jmnuGuessing"); // NOI18N

        jmnuHiLo.setText(resourceMap.getString("jmnuHiLo.text")); // NOI18N
        jmnuHiLo.setToolTipText(resourceMap.getString("jmnuHiLo.toolTipText")); // NOI18N
        jmnuHiLo.setName("jmnuHiLo"); // NOI18N
        jmnuHiLo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnuHiLoActionPerformed(evt);
            }
        });
        jmnuGuessing.add(jmnuHiLo);

        jmnuHotCold.setText(resourceMap.getString("jmnuHotCold.text")); // NOI18N
        jmnuHotCold.setName("jmnuHotCold"); // NOI18N
        jmnuHotCold.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmnuHotColdActionPerformed(evt);
            }
        });
        jmnuGuessing.add(jmnuHotCold);

        fileMenu.add(jmnuGuessing);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(guessinggame.GuessingGameApp.class).getContext().getActionMap(GuessingGameView.class, this);
        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        statusPanel.setName("statusPanel"); // NOI18N

        statusPanelSeparator.setName("statusPanelSeparator"); // NOI18N

        statusMessageLabel.setName("statusMessageLabel"); // NOI18N

        statusAnimationLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        statusAnimationLabel.setName("statusAnimationLabel"); // NOI18N

        progressBar.setName("progressBar"); // NOI18N

        javax.swing.GroupLayout statusPanelLayout = new javax.swing.GroupLayout(statusPanel);
        statusPanel.setLayout(statusPanelLayout);
        statusPanelLayout.setHorizontalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusPanelSeparator, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(statusMessageLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 472, Short.MAX_VALUE)
                .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(statusAnimationLabel)
                .addContainerGap())
        );
        statusPanelLayout.setVerticalGroup(
            statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(statusPanelLayout.createSequentialGroup()
                .addComponent(statusPanelSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(statusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(statusMessageLabel)
                    .addComponent(statusAnimationLabel)
                    .addComponent(progressBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3))
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
        setStatusBar(statusPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnSubmitGuessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSubmitGuessActionPerformed
        statusMessageLabel.setText("");
        if (jtxtGuess.getText().isEmpty()) {
            statusMessageLabel.setText("Please make a guess.");
            return ;
        }
        
        g.makeGuess(Integer.valueOf(jtxtGuess.getText()));
        if (!g.getErrorMsg().isEmpty()) {
            statusMessageLabel.setText(g.getErrorMsg());
        } else if (g.isOver()) {
            jtxtGuessHistory.append("\n" + g.getEndMsg());
            jtxtGuess.setEnabled(false);
        } else {
            jtxtGuessHistory.append(g.getGuessResult());
        }
        jtxtGuess.setText("");
        jtxtGuess.requestFocusInWindow();
    }//GEN-LAST:event_jbtnSubmitGuessActionPerformed

    private void jmnuHiLoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnuHiLoActionPerformed
        g = new GuessHiLo(1);
        jtxtGameName.setText(g.getGameName());
        jtxtInstructions.setText(g.getInstructions());
        jtxtGuessHistory.setText("I am thinking of a number from 1 to 100...\n");
        jtxtGuess.setEnabled(true);
        jbtnSubmitGuess.setEnabled(true);
    }//GEN-LAST:event_jmnuHiLoActionPerformed

    private void jmnuHotColdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmnuHotColdActionPerformed
        g = new GuessHotCold(2);
        jtxtGameName.setText(g.getGameName());
        jtxtInstructions.setText(g.getInstructions());
        jtxtGuessHistory.setText("I am thinking of a number from 1 to 100...\n");
        jtxtGuess.setEnabled(true);
        jbtnSubmitGuess.setEnabled(true);
    }//GEN-LAST:event_jmnuHotColdActionPerformed

    private void jbtnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnClearActionPerformed
        statusMessageLabel.setText("");
        jtxtGameName.setText("");
        jtxtInstructions.setText("");
        jtxtGuessHistory.setText("");
        jtxtGuess.setText("");
        jtxtGuess.setEnabled(false);
        jbtnSubmitGuess.setEnabled(false);
        g = null;
    }//GEN-LAST:event_jbtnClearActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnClear;
    private javax.swing.JButton jbtnSubmitGuess;
    private javax.swing.JMenu jmnuGuessing;
    private javax.swing.JMenuItem jmnuHiLo;
    private javax.swing.JMenuItem jmnuHotCold;
    private javax.swing.JTextField jtxtGameName;
    private javax.swing.JTextField jtxtGuess;
    private javax.swing.JTextArea jtxtGuessHistory;
    private javax.swing.JTextArea jtxtInstructions;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JLabel statusAnimationLabel;
    private javax.swing.JLabel statusMessageLabel;
    private javax.swing.JPanel statusPanel;
    // End of variables declaration//GEN-END:variables

    private final Timer messageTimer;
    private final Timer busyIconTimer;
    private final Icon idleIcon;
    private final Icon[] busyIcons = new Icon[15];
    private int busyIconIndex = 0;

    private JDialog aboutBox;
}
